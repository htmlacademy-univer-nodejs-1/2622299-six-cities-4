openapi: 3.1.0
info:
  title: API сервер для демо-проекта «Шесть городов».
  description: |-
    * Список ресурсов и маршрутов сервера «Шесть городов».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0

tags:
  - name: offers
    description: Действия с объявлениями.
  - name: comments
    description: Действия с комментариями.
  - name: users
    description: Действия с пользователями.
paths:
  /comments:
    post:
      tags:
        - comments
      summary: Создать комментарий
      description: Создание комментария

      requestBody:
        description: Информация для создания нового комментария.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createComment'
        required: true

      responses:
        '201':
          description: Новый комментарий создан.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment'

  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя.
      description: Регистрация нового пользователя.

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'
        required: true

      responses:
        '201':
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        '409':
          description: Пользователь с таким mail уже существует
  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизует пользователя на основе логина и пароля

      requestBody:
        description: Информация для авторизации.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginUser'
        required: true

      responses:
        '201':
          description: Пользователь авторизирован.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userAuthorized'
    get:
      tags:
        - users
      summary: Проверка состояния пользователя.
      description: Возвращает информацию по авторизированном пользователю.

      responses:
        '201':
          description: Пользователь точно авторизирован.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/isAuthorized'

  /offers:
    get:
      tags:
        - offers
      summary: Получить список предложений
      description: Список предложений по аренде. По умолчанию возвращает до 60. Можно задать нужное количество через параметр запроса.
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            maximum: 60
            example: 10
          description: Количество предложений для возврата
      responses:
        '200':
          description: Список предложений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offerSummary'
    post:
      tags:
        - offers
      summary: Создать предложение
      description: Создание предложения

      requestBody:
        description: Информация для создания предложения
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOffer'
        required: true

      responses:
        '200':
          description: Предложение успешно создано
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

  /offers/{offerId}:
    get:
      tags:
        - offers
      summary: Получить подробную информацию
      description: Получение подробной информации
      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: string
            example: 6329c3d6a04ab1061c6425ef
          description: Идентификатор предложения

      responses:
        '200':
          description: Предложение успешно найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        '404':
          description: Предложение не найдено

    patch:
      tags:
        - offers
      summary: Изменить предложение
      description: Изменение предложения
      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: string
            example: 6329c3d6a04ab1061c6425ef
          description: Идентификатор предложения

      requestBody:
        description: Информация для редактирования предложения
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateOffer'
        required: true

      responses:
        '200':
          description: Предложение успешно обновлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        '400':
          description: Неверные данные
        '404':
          description: Предложение не найдено
        '500':
          description: Не является автором предложения

    delete:
      tags:
        - offers
      summary: Удалить предложение
      description: Удаление предложения
      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: string
            example: 6329c3d6a04ab1061c6425ef
          description: Идентификатор предложения
      responses:
        '204':
          description: Предложение успешно удалено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        '404':
          description: Предложение не найдено

  /offers/{town}/premium:
    get:
      tags:
        - offers
      summary: Получить премиальные предложения по городу
      description: Список до 3 премиальных предложений в указанном городе

      parameters:
        - name: town
          in: path
          required: true
          schema:
            type: string
            enum: [Paris, Cologne, Brussels, Amsterdam, Hamburg, Dusseldorf]
          description: Название города

      responses:
        '200':
          description: Список премиальных предложений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offerSummary'
  /offers/favorites:
    get:
      tags:
        - offers
      summary: Получить избранные предложения
      description: Список всех предложений, добавленных в избранное текущим пользователем
      responses:
        '200':
          description: Список избранных предложений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offerSummary'

  /offers/{offerId}/favorite:
    post:
      tags:
        - offers
      summary: Добавить предложение в избранное
      description: Добавляет предложение в список избранных текущего пользователя
      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: string
          description: ID предложения
      responses:
        '200':
          description: Предложение добавлено в избранное
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offerSummary'
    delete:
      tags:
        - offers
      summary: Удалить предложение из избранного
      description: Удаляет предложение из списка избранных текущего пользователя
      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: string
          description: ID предложения
      responses:
        '200':
          description: Предложение удалено из избранного

  /offers/{offerId}/comments:
    get:
      tags:
        - offers
      summary: Получить список комментариев
      description: Получение списка комментариев по номеру предложения
      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: string
            example: 6329c3d6a04ab1061c6425ef
          description: ID предложения, для которого запрашиваются комментарии

        - name: limit
          in: query
          schema:
            type: integer
            maximum: 50
            example: 10
          description: Количество комментариев для получения

      responses:
        '200':
          description: Список комментариев
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/comment'

components:
  schemas:
    loginUser:
      type: object
      required: [mail, password]

      properties:
        mail:
          type: string
          example: keks@htmlacademy.ru

        password:
          type: string
          example: 123456

    createUser:
      type: object
      required: [mail, name, avatar, password, type]

      properties:
        mail:
          type: string
          example: keks@htmlacademy.ru

        name:
          type: string
          example: Keks

        avatar:
          type: [string, 'null']
          example: https://gravatar.com/avatar/7cb23e9dcb44eeff5331a137414a0f1b?s=400&d=robohash&r=x

        password:
          type: string
          example: 123456

        type:
          type: string
          enum: [regular, pro]
          example: regular

    isAuthorized:
      type: object

      properties:
        mail:
          type: string
          example: 6329c3d6a04ab1061c6425ea

    userAuthorized:
      type: object

      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiJ9.eyJtYWlsIjoia2Vrc0BodG1sYWNhZGVteS5ydSIsIm5hbWUiOiJLZWtzIiwiaWQiOiI2ODMzMWY5ODU5YTc5YTY0ZjhiZDQ3ODciLCJpYXQiOjE3NDgxODExOTgsImV4cCI6MTc0ODM1Mzk5OH0.E2ZC0I9ScvCWajCnJ-WgNbNzdbqa11oBsaZvFri08fE

        mail:
          type: string
          example: 6329c3d6a04ab1061c6425ea

    user:
      type: object
      required: [id, mail, name, type]

      properties:
        id:
          type: string
          example: 6329c3d6a04ab1061c6425ea

        mail:
          type: string
          example: keks@htmlacademy.ru

        name:
          type: string
          example: Keks

        avatar:
          type: string
          example: https://gravatar.com/avatar/7cb23e9dcb44eeff5331a137414a0f1b?s=400&d=robohash&r=x

        type:
          type: string
          enum: [regular, pro]
          example: regular

    updateOffer:
      type: object

      properties:
        title:
          type: string
          example: Modern Loft in Berlin

        description:
          type: string
          example: Cozy loft with a stunning view of the city

        image:
          type: string
          example: image.jpg

        date:
          type: string
          format: date
          example: 2025-06-01

        cost:
          type: number
          example: 180

        town:
          type: string
          enum: [Paris, Cologne, Brussels, Amsterdam, Hamburg, Dusseldorf]
          example: Paris

        gallery:
          type: array
          items:
            type: string
          example: [image1.jpg, image2.jpg, image3.jpg, image4.jpg, image5.jpg, image6.jpg]

        isPremium:
          type: boolean
          example: true

        isFavorite:
          type: boolean
          example: false

        rating:
          type: number
          example: 4.5

        apartmentType:
          type: string
          enum: [apartment, house, room, hotel]
          example: apartment

        roomCount:
          type: integer
          example: 4

        guestCount:
          type: integer
          example: 4

        amenities:
          type: array
          items:
            type: string
            enum:
              [
                Breakfast,
                Air conditioning,
                Laptop friendly workspace,
                Baby seat,
                Washer,
                Towels,
                Fridge,
              ]
            example: [Fridge, Breakfast, Washer]

        userId:
          type: string
          example: 6329c3d6a04ab1061c6425ea

    createOffer:
      type: object
      required:
        [
          title,
          description,
          image,
          date,
          cost,
          town,
          gallery,
          isPremium,
          isFavorite,
          rating,
          apartmentType,
          roomCount,
          guestCount,
          amenities,
          userId,
        ]

      properties:
        title:
          type: string
          example: Modern Loft in Berlin

        description:
          type: string
          example: Cozy loft with a stunning view of the city

        image:
          type: string
          example: image.jpg

        date:
          type: string
          format: date
          example: 2025-06-01

        cost:
          type: number
          example: 180

        town:
          type: string
          enum: [Paris, Cologne, Brussels, Amsterdam, Hamburg, Dusseldorf]
          example: Paris

        gallery:
          type: array
          items:
            type: string
          example: [image1.jpg, image2.jpg, image3.jpg, image4.jpg, image5.jpg, image6.jpg]

        isPremium:
          type: boolean
          example: true

        isFavorite:
          type: boolean
          example: false

        rating:
          type: number
          example: 4.5

        apartmentType:
          type: string
          enum: [apartment, house, room, hotel]
          example: apartment

        roomCount:
          type: integer
          example: 4

        guestCount:
          type: integer
          example: 4

        amenities:
          type: array
          items:
            type: string
            enum:
              - Breakfast
              - Air conditioning
              - Laptop friendly workspace
              - Baby seat
              - Washer
              - Towels
              - Fridge
          example:
            - Fridge
            - Breakfast
            - Washer

    offerSummary:
      type: object

      properties:
        id:
          type: string
          example: 6329c3d6a04ab1061c6425ef

        title:
          type: string
          example: Modern Loft in Berlin

        cost:
          type: number
          example: 180

        apartmentType:
          type: string
          enum: [apartment, house, room, hotel]
          example: apartment

        isFavorite:
          type: boolean
          example: true

        date:
          type: string
          format: date
          example: 2025-06-01

        town:
          type: string
          enum: [Paris, Cologne, Brussels, Amsterdam, Hamburg, Dusseldorf]
          example: Paris

        image:
          type: string
          example: image.jpg

        isPremium:
          type: boolean
          example: true

        rating:
          type: number
          example: 4.5

        commentCount:
          type: integer
          example: 4

        userId:
          type: string
          example: 6329c3d6a04ab1061c6425eu

    offer:
      type: object
      required:
        [
          id,
          title,
          description,
          image,
          date,
          cost,
          town,
          gallery,
          isPremium,
          isFavorite,
          rating,
          apartmentType,
          roomCount,
          guestCount,
          amenities,
          userId,
          commentCount,
          coordinates,
        ]

      properties:
        id:
          type: string
          example: 6329c3d6a04ab1061c6425ef

        title:
          type: string
          example: Modern Loft in Berlin

        description:
          type: string
          example: Cozy loft with a stunning view of the city

        image:
          type: string
          example: image.jpg

        date:
          type: string
          format: date
          example: 2025-06-01

        cost:
          type: number
          example: 180

        town:
          type: string
          enum: [Paris, Cologne, Brussels, Amsterdam, Hamburg, Dusseldorf]
          example: Paris

        gallery:
          type: array
          items:
            type: string
          example: [img1.jpg, img2.jpg, img3.jpg, img4.jpg, img5.jpg, img6.jpg]

        isPremium:
          type: boolean
          example: true

        isFavorite:
          type: boolean
          example: true

        rating:
          type: number
          example: 4.5

        apartmentType:
          type: string
          enum: [apartment, house, room, hotel]
          example: apartment

        roomCount:
          type: integer
          example: 4

        guestCount:
          type: integer
          example: 4

        amenities:
          type: array
          items:
            type: string
            enum:
              - Breakfast
              - Air conditioning
              - Laptop friendly workspace
              - Baby seat
              - Washer
              - Towels
              - Fridge
          example:
            - Fridge
            - Breakfast
            - Washer

        userId:
          type: string
          example: 6329c3d6a04ab1061c6425eu

        commentCount:
          type: integer
          example: 4

        coordinates:
          type: object
          example: { latitude: 48.85661, longitude: 2.351499 }

    createComment:
      type: object
      required: [text, date, rating, author]

      properties:
        text:
          type: string
          example: Класс! 5/5

        date:
          type: string
          format: date
          example: 2025-06-01

        rating:
          type: number
          example: 5

        author:
          type: string
          example: 6329c3d6a04ab1061c6425ea

        offerId:
          type: string
          example: 6329c3d6a04ab1061c6425ef

    comment:
      type: object

      properties:
        id:
          type: string
          example: 6329c3d6a04ab1061c6425ec

        text:
          type: string
          example: Класс! 5/5

        date:
          type: string
          format: date
          example: 2025-06-01

        rating:
          type: number
          example: 5

        author:
          type: string
          example: 6329c3d6a04ab1061c6425ea

        offerId:
          type: string
          example: 6329c3d6a04ab1061c6425ef
